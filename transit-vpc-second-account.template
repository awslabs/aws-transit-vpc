{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "(SO0001p) - Transit VPC: This template creates a TransitVPC poller function to find spoke VPCs to add to the transit network.",
  "Parameters" : {
    "BucketName" : {
      "Description" : "Name of the bucket used to store transit VPC configuration files.",
      "Type" : "String",
      "Default" : "transit-vpc"
    },
    "BucketPrefix" : {
      "Description" : "S3 object prefix for storing VPN configuration.",
      "Type" : "String",
      "Default" : "vpnconfigs/",
      "AllowedPattern": "^[a-z0-9A-Z_/-./]*/$"
    }
  },
  "Mappings" : {
    "Function" : {
      "Poller" : { 
	"CodeLocation" : "solutions-reference/transit-vpc/v4/transit-vpc-poller.py",
	"Name" : "vgw-poller",
        "Description": "Transit VPC: Poller function responsible for identifying specifically tagged VGWs and creating VPN connections to transit VPC.",
        "Runtime": "python2.7",
        "Timeout": "120",
        "MemorySize": "128"
      },
      "FindReplace" : {
	"S3BucketID" : "%BUCKET_NAME%",
	"S3PrefixID" : "%PREFIX%",
	"Deliminator" : "|"
      }
    }
  },
  "Resources": {
    "SolutionHelperRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          } ]
        },
        "Path": "/",
          "Policies": [ {
            "PolicyName": "Solution_Helper_Permissions",
            "PolicyDocument": {
              "Version" : "2012-10-17",
	      "Statement": [
		{
		  "Effect": "Allow",
		  "Action": [
		    "logs:CreateLogGroup",
		    "logs:CreateLogStream",
		    "logs:PutLogEvents"
		  ],
		  "Resource": { "Fn::Join" : ["", ["arn:aws:logs:",{"Ref" : "AWS::Region"},":",{ "Ref" : "AWS::AccountId" }, ":log-group:/aws/lambda/*" ]]}
		},
		{
		  "Effect": "Allow",
		  "Action": [
		    "lambda:*",
		    "events:*",
		    "iam:PassRole",
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject",
                    "s3:PutBucketNotification",
		    "ec2:DescribeSecurityGroups",
		    "ec2:DescribeSubnets"
		  ],
		  "Resource": "*"
	       }
	     ]
          }
        } ]
      }
    },
    "SolutionHelper": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
      	"Handler": "solution-helper.lambda_handler",
      	"Role": { "Fn::GetAtt" : [ "SolutionHelperRole" , "Arn" ] },
	"Description": "Transit VPC: CloudFormation custom resource function invoked during transit VPC CloudFormation create, update, and delete stack operations.",
      	"Code": {
      	  "S3Bucket": { "Fn::Join": ["", ["solutions-", {"Ref" : "AWS::Region"}]] },
      	  "S3Key": "library/solution-helper/v2/solution-helper.zip"
      	},
      	"Runtime": "python2.7",
      	"Timeout": "60"
     }
   },
   "TransitVpcPollerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          } ]
        },
        "Path": "/",
          "Policies": [ {
            "PolicyName": "My_Lambda_Function_Permissions",
            "PolicyDocument": {
              "Version" : "2012-10-17",
	      "Statement": [
		{
		  "Effect": "Allow",
		  "Action": [
		    "logs:CreateLogGroup",
		    "logs:CreateLogStream",
		    "logs:PutLogEvents"
		  ],
		  "Resource": { "Fn::Join" : ["", ["arn:aws:logs:",{"Ref" : "AWS::Region"},":",{ "Ref" : "AWS::AccountId" }, ":log-group:/aws/lambda/*" ]]}
		},
		{
		  "Effect": "Allow",
		  "Action": [
                    "ec2:Describe*",
                    "ec2:CreateTags",
                    "ec2:CreateCustomerGateway",
                    "ec2:DeleteCustomerGateway",
                    "ec2:CreateVpnConnection",
                    "ec2:DeleteVpnConnection"
		  ],
		  "Resource": "*"
	        },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kms:Decrypt",
                    "kms:GenerateDataKey*",
                    "kms:Encrypt"
                  ],
                  "Resource": "*"
                },
		{
		  "Effect": "Allow",
		  "Action": [
                    "s3:PutObject",
                    "s3:PutObjectAcl",
                    "s3:GetObject"
		  ],
		  "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref" : "BucketName" }, "/", {"Ref": "BucketPrefix"}, "*" 	]] }
	       }
	     ]
          }
        } ]
      }
    },
   "PollerFunct": {
     "Type": "Custom::LoadLambda",
     "Properties": {
       "ServiceToken": { "Fn::GetAtt" : ["SolutionHelper", "Arn"] },
       "Region": { "Ref": "AWS::Region" },
       "LambdaCode": { "Fn::FindInMap" : [ "Function", "Poller", "CodeLocation"]},
       "Deliminator": { "Fn::FindInMap" : [ "Function", "FindReplace", "Deliminator"]},
       "FunctionName": { "Fn::Join": ["", [ { "Ref" : "AWS::StackName" }, "-", { "Fn::FindInMap" : [ "Function", "Poller", "Name"]} ]] },
       "Role": { "Fn::GetAtt" : [ "TransitVpcPollerRole", "Arn" ] },
       "CloudWatchEvent" : { "Fn::Join": ["", [
		"{ 'RuleName' : '",{ "Ref" : "AWS::StackName" },"-VGW-Poller-1min', ",
		"'ScheduleExpression' : 'cron(* * * * ? *)',",
		"'Description': 'Transit VPC: Rule to trigger VGW-Poller every minute to find VGWs that need to be attached to the transit VPC.' }"
	]] },
       "Runtime": { "Fn::FindInMap" : [ "Function", "Poller", "Runtime"]},
       "Description": { "Fn::FindInMap" : [ "Function", "Poller", "Description"]},
       "Timeout": { "Fn::FindInMap" : [ "Function", "Poller", "Timeout"]},
       "MemorySize": { "Fn::FindInMap" : [ "Function", "Poller", "MemorySize"]},
       "FindReplace" : { "Fn::Join": ["", [
		{ "Fn::FindInMap" : [ "Function", "FindReplace", "S3BucketID"]},
		{ "Fn::FindInMap" : [ "Function", "FindReplace", "Deliminator"]},
		{ "Ref" : "BucketName" },",",
		{ "Fn::FindInMap" : [ "Function", "FindReplace", "S3PrefixID"]},
		{ "Fn::FindInMap" : [ "Function", "FindReplace", "Deliminator"]},
		{ "Ref" : "BucketPrefix" }
	]] }
     }
   }
  },
  "Outputs" : {
   "PollerFunction" : {
     "Description" : "New Lambda function name.",
     "Value" : { "Fn::FindInMap" : [ "Function", "Poller", "Name"]} 
   },
   "PollerFunctionARN" : {
     "Description" : "ARN for new Lambda function.",
     "Value" : { "Fn::GetAtt" : [ "PollerFunct", "FunctionArn" ] } 
   },
   "PollerRoleARN" : {
     "Description" : "ARN for poller function role.",
     "Value" : { "Fn::GetAtt" : [ "TransitVpcPollerRole", "Arn" ] } 
   }
  }
}

