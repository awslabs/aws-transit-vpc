{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "(SO0001s) - Transit VPC spoke: Creates a spoke VPC for TransitVPC testing.",

  "Parameters" : {
    "PreferredPathTag" : {
      "Description" : "Tag to use to configure a preferred CSR VPN endpoint to control traffic flow through the Transit VPC CSRs (e.g. when integrating with stateful on-prem firewalls).",
      "Type" : "String",
      "Default" : "transitvpc:preferred-path"
    },
    "PreferredPathValue" : {
      "Description" : "Specify if there is a preferred CSR to control the traffic flow through the Transit VPC (e.g. when integrating with stateful on-prem firewalls).",
      "Type" : "String",
      "Default" : "none",
      "AllowedValues" : [ "none", "CSR1", "CSR2" ]
    },
    "SpokeTag" : {
      "Description" : "Tag to use to identify spoke VPCs to connect to Transit VPC.",
      "Type" : "String",
      "Default" : "transitvpc:spoke"
    },
    "SpokeTagValue" : {
      "Description" : "Tag value to use to identify spoke VPCs to connect to Transit VPC.",
      "Type" : "String",
      "Default" : "true"
    },
    "VpcCidr" : {
      "Description" : "CIDR block for spoke VPC.",
      "Type" : "String",
      "Default" : "10.255.0.0/16"
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
     "ParameterGroups" : [
      {
        "Label" : { "default" : "Network Configuration" },
        "Parameters" : [ "VpcCidr", "SpokeTag","SpokeTagValue", "PreferredPathTag", "PreferredPathValue" ]
      }
     ],
     "ParameterLabels" : {
      "SpokeTag" : { "default" : "Transit VPC Tag Name" },
      "SpokeTagValue" : { "default" : "Transit VPC Tag Value" },
      "PreferredPathTag" : { "default" : "Preferred VPN Endpoint Tag Name" },
      "PreferredPathValue" : { "default" : "Preferred Path" },
      "VpcCidr" : { "default" : "Spoke VPC CIDR Block" }
     }
    }
  },
  "Mappings" : {
    "LogRetention" : {
      "Period" : { "Days" : 90 }
    }
  },
  "Resources" : {
    "SpokeVPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VpcCidr" },
        "Tags" : [
          { "Key" : "Name", "Value" : "Spoke VPC" }
        ]
      }
    },
    "VGW" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" : [
          { "Key" : "Name", "Value" : "Spoke VPC VGW" },
          { "Key" : { "Ref" : "PreferredPathTag" }, "Value" : { "Ref" : "PreferredPathValue" }},
          { "Key" : { "Ref" : "SpokeTag" }, "Value" : { "Ref" : "SpokeTagValue" }}
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "AttachVGWToVPC" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "SpokeVPC" },
         "VpnGatewayId" : { "Ref" : "VGW" }
       }
    },
    "VPCRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "SpokeVPC" },
        "Tags" : [
          { "Key" : "Network", "Value" : "Public" },
          { "Key" : "Name", "Value" : "Spoke VPC" }
        ]
      }
    },
    "ProgagateRoute" : {
     "DependsOn" : "AttachVGWToVPC",
      "Type" : "AWS::EC2::VPNGatewayRoutePropagation",
      "Properties" : {
        "RouteTableIds" : [ { "Ref" : "VPCRouteTable" } ],
        "VpnGatewayId" : { "Ref" : "VGW" }
      }
    },
    "FlowLog": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "ResourceId": {
          "Ref": "SpokeVPC"
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "RoleFlowLogs",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Ref": "AWS::StackName"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "RoleFlowLogs": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "FlowLogPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
                "logs:CreateLogGroup",
                "logs:DescribeLogGroups"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LogGroupFlowLogs",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FlowLogPolicy",
        "Roles": [
          {
            "Ref": "RoleFlowLogs"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "LogGroupFlowLogs": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Ref": "AWS::StackName"
        },
        "RetentionInDays": { "Fn::FindInMap" : [ "LogRetention", "Period", "Days"]}
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "CloudWatch logs are encrypted by the service"
            }
          ]
        }
      }
    }

  },
  "Outputs" : {
    "VPCID" : {
      "Description" : "VPC ID",
      "Value" : { "Ref" : "SpokeVPC" }
    },
    "CIDR" : {
      "Description" : "VPC CIDR",
      "Value" : { "Ref" : "VpcCidr" }
    },
    "VGWID" : {
      "Description" : "VGW ID",
      "Value" : { "Ref" : "VGW" }
    },
    "TransitVPCtags" : {
      "Description" : "Tag name/value",
      "Value" : { "Fn::Join": [ "", [ { "Ref" : "SpokeTag" }, " = ", { "Ref": "SpokeTagValue" } ] ] }
    },
    "TransitVPCPath" : {
      "Description" : "Tag name/value",
      "Value" : { "Fn::Join": [ "", [ { "Ref" : "PreferredPathTag" }, " = ", { "Ref": "PreferredPathValue" } ] ] }
    }
  }
}
